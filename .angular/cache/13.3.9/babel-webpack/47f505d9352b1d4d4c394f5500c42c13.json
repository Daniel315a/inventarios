{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Producto } from 'src/app/models/producto';\nimport { FiltroProductosPipe } from 'src/app/pipes/filtro-productos.pipe';\nimport { ProductoService } from 'src/app/services/producto.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/producto.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction SelectProductosComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function SelectProductosComponent_a_5_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const producto_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.establecerProducto(producto_r1.referencia);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const producto_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.itemActivo == producto_r1 ? \"dropdown-item is-active\" : \"dropdown-item\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", producto_r1.referencia, \": \", producto_r1.detalle, \" \");\n  }\n}\n\nexport let SelectProductosComponent = /*#__PURE__*/(() => {\n  class SelectProductosComponent {\n    constructor(_productoService) {\n      this._productoService = _productoService;\n      this.producto = new Producto();\n      this.productos = new Array();\n      this.productosFiltrados = new Array();\n      this.listadoActivo = false;\n      this.filtroProducto = '';\n      this.productoSeleccionado = new EventEmitter();\n      this.labels = {\n        producto: 'Producto'\n      };\n    }\n\n    ngOnInit() {\n      this.consultarProductos();\n    }\n\n    consultarProductos() {\n      this.productos = new Array();\n\n      this._productoService.consultarPorEmpresa().subscribe(result => {\n        if (result.resultado) {\n          result.datos.forEach(item => {\n            this.productos.push(item);\n          });\n        }\n      });\n    }\n\n    onProductoSeleccionado() {\n      let producto = this.productos.find(producto => producto.id == this.producto.id);\n      this.productoSeleccionado.emit(producto);\n    }\n\n    onChangedBusquedaProducto(key) {\n      this.listadoActivo = false;\n\n      if (this.filtroProducto.length > 1) {\n        this.productosFiltrados = new FiltroProductosPipe().transform(this.productos, [this.filtroProducto]);\n\n        if (this.productosFiltrados.length > 0) {\n          this.listadoActivo = true;\n        }\n      }\n\n      this.controlarDesplazamiento(key);\n    }\n\n    controlarDesplazamiento(key) {\n      if (this.listadoActivo) {\n        let indiceActivo = this.productosFiltrados.indexOf(this.itemActivo);\n\n        if (key == \"ArrowDown\") {\n          this.itemActivo = this.productosFiltrados[indiceActivo + 1];\n        } else if (key == \"ArrowUp\") {\n          this.itemActivo = this.productosFiltrados[indiceActivo - 1];\n        } else if (key == \"Enter\") {\n          this.establecerProducto(this.productosFiltrados[indiceActivo].referencia);\n        }\n      }\n    }\n\n    establecerProducto(referencia) {\n      this.itemActivo = this.productosFiltrados.find(producto => producto.referencia == referencia);\n      this.producto = this.itemActivo;\n      this.filtroProducto = this.producto.referencia;\n      this.listadoActivo = false;\n      this.onProductoSeleccionado();\n    }\n\n  }\n\n  SelectProductosComponent.ɵfac = function SelectProductosComponent_Factory(t) {\n    return new (t || SelectProductosComponent)(i0.ɵɵdirectiveInject(i1.ProductoService));\n  };\n\n  SelectProductosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectProductosComponent,\n    selectors: [[\"app-select-productos\"]],\n    outputs: {\n      productoSeleccionado: \"productoSeleccionado\"\n    },\n    features: [i0.ɵɵProvidersFeature([ProductoService])],\n    decls: 6,\n    vars: 4,\n    consts: [[3, \"ngClass\"], [1, \"dropdown-trigger\"], [\"type\", \"text\", \"name\", \"producto\", 1, \"input\", \"is-uppercase\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"dropdown-menu\"], [1, \"dropdown-content\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n    template: function SelectProductosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectProductosComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.filtroProducto = $event;\n        })(\"keyup\", function SelectProductosComponent_Template_input_keyup_2_listener($event) {\n          return ctx.onChangedBusquedaProducto($event.key);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtemplate(5, SelectProductosComponent_a_5_Template, 2, 3, \"a\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.listadoActivo ? \"dropdown is-active\" : \"dropdown\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.labels.producto);\n        i0.ɵɵproperty(\"ngModel\", ctx.filtroProducto);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.productosFiltrados);\n      }\n    },\n    directives: [i2.NgClass, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.NgForOf],\n    styles: [\"\"]\n  });\n  return SelectProductosComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}