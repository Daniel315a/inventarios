{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { TipoDocumento } from 'src/app/models/tipo-documento';\nimport { TipoDocumentoService } from 'src/app/services/tipo-documento.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tipo-documento.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction SelectTiposDocumentoComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tipoDocumento_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tipoDocumento_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tipoDocumento_r1.nombre);\n  }\n}\n\nexport let SelectTiposDocumentoComponent = /*#__PURE__*/(() => {\n  class SelectTiposDocumentoComponent {\n    constructor(_tipoDocumentoService) {\n      this._tipoDocumentoService = _tipoDocumentoService;\n      this.tipoDocumento = new TipoDocumento();\n      this.tiposDocumento = new Array();\n      this.tipoDocumentoSeleccionado = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.consultarTiposDocumento();\n    }\n\n    onTipoSeleccionado() {\n      const tipoDocumento = this.tiposDocumento.find(tipoDocumento => tipoDocumento.id = this.tipoDocumento.id);\n      this.tipoDocumentoSeleccionado.emit(tipoDocumento);\n    }\n\n    consultarTiposDocumento() {\n      this.tiposDocumento = new Array();\n      this.tiposDocumento.push(new TipoDocumento(0, 'Seleccione un tipo de documento'));\n\n      this._tipoDocumentoService.consultarTodos().subscribe(result => {\n        if (result.resultado) {\n          result.datos.forEach(tipoDocumento => {\n            this.tiposDocumento.push(tipoDocumento);\n          });\n        }\n      });\n    }\n\n  }\n\n  SelectTiposDocumentoComponent.ɵfac = function SelectTiposDocumentoComponent_Factory(t) {\n    return new (t || SelectTiposDocumentoComponent)(i0.ɵɵdirectiveInject(i1.TipoDocumentoService));\n  };\n\n  SelectTiposDocumentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectTiposDocumentoComponent,\n    selectors: [[\"app-select-tipos-documento\"]],\n    inputs: {\n      tipoDocumento: \"tipoDocumento\"\n    },\n    features: [i0.ɵɵProvidersFeature([TipoDocumentoService])],\n    decls: 2,\n    vars: 2,\n    consts: [[\"name\", \"tipoDocumento\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectTiposDocumentoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectTiposDocumentoComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.tipoDocumento.id = $event;\n        })(\"change\", function SelectTiposDocumentoComponent_Template_select_change_0_listener() {\n          return ctx.onTipoSeleccionado();\n        });\n        i0.ɵɵtemplate(1, SelectTiposDocumentoComponent_option_1_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.tipoDocumento.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tiposDocumento);\n      }\n    },\n    directives: [i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return SelectTiposDocumentoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}