{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Utilidades } from \"../models/utilidades\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CotizacionService = /*#__PURE__*/(() => {\n  class CotizacionService {\n    constructor(_http) {\n      this._http = _http;\n      this.url = environment.url + 'Cotizacion';\n    }\n\n    consultarListado() {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_empresa').set('empresa', usuario.empresa.id);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarInformeCsv(filtro) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'informe_csv').set('texto', filtro);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    crear(cotizacion) {\n      let detalles = JSON.stringify(cotizacion.detalles);\n      Utilidades.trim(cotizacion);\n      detalles = detalles.replace(/precioUnitario/gi, 'precio_unitario');\n      detalles = detalles.replace(/porcentajeIva/gi, 'porcentaje_iva');\n      detalles = detalles.replace(/valorIva/gi, 'valor_iva');\n      detalles = detalles.replace(/precioTotal/gi, 'precio_total');\n      detalles = detalles.replace(/true/gi, '1');\n      detalles = detalles.replace(/false/gi, '0');\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'crear').set('fecha', cotizacion.fecha).set('cliente', cotizacion.cliente.id.toString()).set('notas', cotizacion.notas).set('total_iva', cotizacion.totalIva.toString()).set('precio_total', cotizacion.precioTotal.toString()).set('detalles', detalles);\n      return this._http.post(this.url, parametros);\n    }\n\n  }\n\n  CotizacionService.ɵfac = function CotizacionService_Factory(t) {\n    return new (t || CotizacionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CotizacionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CotizacionService,\n    factory: CotizacionService.ɵfac\n  });\n  return CotizacionService;\n})();","map":null,"metadata":{},"sourceType":"module"}