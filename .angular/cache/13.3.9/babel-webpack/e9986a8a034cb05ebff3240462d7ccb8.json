{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Utilidades } from \"../models/utilidades\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PersonaService = /*#__PURE__*/(() => {\n  class PersonaService {\n    constructor(_http) {\n      this._http = _http;\n      this.url = environment.url + 'Persona';\n    }\n\n    consultarListado() {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_empresa').set('empresa', usuario.empresa.id);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarListadoPorTipo(tipo) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_tipo').set('empresa', usuario.empresa.id).set('tipo', tipo.id.toString());\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarPorId(id) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_id').set('id', id.toString());\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarPorNumeroDocumento(numeroDocumento) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_documento').set('numero_documento', numeroDocumento);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarEmpleados() {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'consultar_por_tipo_empleado').set('empresa', usuario.empresa.id);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    crear(persona) {\n      const usuario = Utilidades.obtenerUsuario();\n      Utilidades.trim(persona);\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'crear').set('municipio', persona.municipio.id.toString()).set('tipo', persona.tipo.id.toString()).set('empresa', usuario.empresa.id.toString()).set('tipo_documento', persona.tipoDocumento.id.toString()).set('numero_documento', persona.numeroDocumento).set('nombres', persona.nombres).set('apellidos', persona.apellidos).set('razon_social', persona.razonSocial).set('direccion', persona.direccion).set('telefono', persona.telefono).set('email', persona.email).set('habilitada', '1');\n      return this._http.post(this.url, parametros);\n    }\n\n    actualizar(persona) {\n      const usuario = Utilidades.obtenerUsuario();\n      Utilidades.trim(persona);\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'actualizar').set('id', persona.id.toString()).set('municipio', persona.municipio.id.toString()).set('tipo', persona.tipo.id.toString()).set('empresa', usuario.empresa.id.toString()).set('tipo_documento', persona.tipoDocumento.id.toString()).set('numero_documento', persona.numeroDocumento).set('nombres', persona.nombres).set('apellidos', persona.apellidos).set('razon_social', persona.razonSocial).set('direccion', persona.direccion).set('telefono', persona.telefono).set('email', persona.email).set('habilitada', '1');\n      return this._http.post(this.url, parametros);\n    }\n\n    eliminar(id) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'eliminar').set('id', id.toString()).set('habilitada', '0');\n      return this._http.post(this.url, parametros);\n    }\n\n  }\n\n  PersonaService.ɵfac = function PersonaService_Factory(t) {\n    return new (t || PersonaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PersonaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PersonaService,\n    factory: PersonaService.ɵfac\n  });\n  return PersonaService;\n})();","map":null,"metadata":{},"sourceType":"module"}