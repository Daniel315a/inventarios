{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport Swal from \"sweetalert2\";\nimport { TipoPersona } from \"./tipo-persona\";\nexport class Utilidades {\n  static establecerUsuario(usuario) {\n    localStorage.setItem('usr-decoraytransforma', JSON.stringify(usuario));\n  }\n\n  static verificarLogin() {\n    return !!localStorage.getItem('usr-decoraytransforma');\n  }\n\n  static obtenerUsuario() {\n    return JSON.parse(localStorage.getItem('usr-decoraytransforma'));\n  }\n\n  static encriptar(cadena) {\n    return '';\n  }\n\n  static desencriptar(cadena) {\n    return '';\n  }\n\n  static dialogSuccess(mensaje) {\n    Swal.fire({\n      text: mensaje,\n      icon: 'success'\n    });\n  }\n\n  static dialogPregunta(titulo, mensaje, mensajeBtnEliminar) {\n    return Swal.fire({\n      title: titulo,\n      text: mensaje,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#004570',\n      cancelButtonColor: '#BF0A19',\n      confirmButtonText: mensajeBtnEliminar,\n      cancelButtonText: 'Cancelar'\n    });\n  }\n\n  static dialogErrorHttp(codigoHttp, mensaje) {\n    Swal.fire({\n      title: 'Error http: ' + codigoHttp,\n      text: mensaje,\n      icon: 'error'\n    });\n  }\n\n  static dialogErrorCampos(mensaje, campos) {\n    let li = '';\n    campos.forEach(campo => {\n      li += `<li style=\"list-style-type: disc;\">\n                      ${campo}\n                  </li>`;\n    });\n    let html = `\n          ${mensaje}\n          <div style=\"text-align: left;\">\n              <br>\n              <ul>\n                  ${li}\n              </ul>\n          <div>\n      `;\n    Swal.fire({\n      title: `<strong>Error</strong>`,\n      icon: 'error',\n      html: html\n    });\n  }\n\n  static dialogImprimir(enlace) {\n    let html = `\n          <p>\n              El documento se ha creado correctamente\n              <br>\n              <a href=\"${enlace}\" target=\"_blank\">\n                  Descargar documento\n              </a>\n          </p>\n      `;\n    Swal.fire({\n      icon: 'success',\n      html: html\n    });\n  }\n\n  static getTipoCliente() {\n    return new TipoPersona(environment.tipoPersonaCliente.id, environment.tipoPersonaCliente.nombre);\n  }\n\n  static getTipoVendedor() {\n    return new TipoPersona(environment.tipoPersonaVendedor.id, environment.tipoPersonaVendedor.nombre);\n  }\n\n  static getTipoDistribuidor() {\n    return new TipoPersona(environment.tipoPersonaDistribuidor.id, environment.tipoPersonaDistribuidor.nombre);\n  }\n\n  static redondear(x) {\n    return 2 * Math.round(x / 2);\n  }\n\n  static trim(obj) {\n    Object.keys(obj).map(k => obj[k] = typeof obj[k] == 'string' ? obj[k].trim() : obj[k]);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}