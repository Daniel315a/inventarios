{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Utilidades } from \"../models/utilidades\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FacturaService = /*#__PURE__*/(() => {\n  class FacturaService {\n    constructor(_http) {\n      this._http = _http;\n      this.url = environment.url + 'Factura';\n    }\n\n    consultarListado() {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'listado');\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarPorId(id) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'por_id').set('id', id.toString());\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    consultarInformeCsv(fechaInicial, fechaFinal, texto) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'informe_csv').set('fecha_inicial', fechaInicial.toString().split(\"T\")[0]).set('fecha_final', fechaFinal.toString().split(\"T\")[0]).set('texto', texto);\n      return this._http.get(this.url, {\n        params: parametros\n      });\n    }\n\n    crear(factura) {\n      let detalles = JSON.stringify(factura.detalles);\n      Utilidades.trim(factura);\n      detalles = detalles.replace(/porcentajeDescuento/gi, 'porcentaje_descuento');\n      detalles = detalles.replace(/valorDescuento/gi, 'valor_descuento');\n      detalles = detalles.replace(/porcentajeIva/gi, 'porcentaje_iva');\n      detalles = detalles.replace(/valorIva/gi, 'valor_iva');\n      detalles = detalles.replace(/precioUnitario/gi, 'precio_unitario');\n      detalles = detalles.replace(/precioTotal/gi, 'precio_total');\n      detalles = detalles.replace(/esInstalacion/gi, 'es_instalacion');\n      detalles = detalles.replace(/true/gi, '1');\n      detalles = detalles.replace(/false/gi, '0');\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'crear').set('fecha', factura.fecha).set('id_cliente', factura.cliente.id.toString()).set('id_vendedor', factura.vendedor.id.toString()).set('valor_total', factura.valorTotal.toString()).set('porcentaje_comision', factura.porcentajeComision.toString()).set('valor_comision', factura.valorComision.toString()).set('total_descuento', factura.totalDescuento.toString()).set('total_iva', factura.totalIva.toString()).set('detalles', detalles);\n      return this._http.post(this.url, parametros);\n    }\n\n    anular(id) {\n      const usuario = Utilidades.obtenerUsuario();\n      const parametros = new HttpParams().set('token', usuario.token).set('solicitud', 'anular').set('id', id.toString());\n      return this._http.post(this.url, parametros);\n    }\n\n  }\n\n  FacturaService.ɵfac = function FacturaService_Factory(t) {\n    return new (t || FacturaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FacturaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FacturaService,\n    factory: FacturaService.ɵfac\n  });\n  return FacturaService;\n})();","map":null,"metadata":{},"sourceType":"module"}