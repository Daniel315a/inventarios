{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { TipoPersona } from 'src/app/models/tipo-persona';\nimport { TipoPersonaService } from 'src/app/services/tipo-persona.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tipo-persona.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction SelectTiposPersonaComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tipoPersona_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tipoPersona_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tipoPersona_r1.nombre);\n  }\n}\n\nexport let SelectTiposPersonaComponent = /*#__PURE__*/(() => {\n  class SelectTiposPersonaComponent {\n    constructor(_tipoPersonaService) {\n      this._tipoPersonaService = _tipoPersonaService;\n      this.tipoPersona = new TipoPersona();\n      this.tiposPersona = new Array();\n      this.tipoPersonaSeleccionado = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.consultarTiposPersona();\n    }\n\n    consultarTiposPersona() {\n      this.tiposPersona = new Array();\n      this.tiposPersona.push(new TipoPersona(0, 'Seleccione un tipo de persona'));\n\n      this._tipoPersonaService.consultarTodos().subscribe(result => {\n        if (result.resultado) {\n          result.datos.forEach(objTipoPersona => {\n            const tipoPersona = new TipoPersona();\n            tipoPersona.inicializar(objTipoPersona);\n            this.tiposPersona.push(tipoPersona);\n          });\n        }\n      });\n    }\n\n    onTipoSeleccionado() {\n      let tipoPersona = this.tiposPersona.find(tipoPersona => tipoPersona.id == this.tipoPersona.id);\n      this.tipoPersonaSeleccionado.emit(tipoPersona);\n    }\n\n  }\n\n  SelectTiposPersonaComponent.ɵfac = function SelectTiposPersonaComponent_Factory(t) {\n    return new (t || SelectTiposPersonaComponent)(i0.ɵɵdirectiveInject(i1.TipoPersonaService));\n  };\n\n  SelectTiposPersonaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectTiposPersonaComponent,\n    selectors: [[\"app-select-tipos-persona\"]],\n    inputs: {\n      tipoPersona: \"tipoPersona\"\n    },\n    outputs: {\n      tipoPersonaSeleccionado: \"tipoPersonaSeleccionado\"\n    },\n    features: [i0.ɵɵProvidersFeature([TipoPersonaService])],\n    decls: 2,\n    vars: 2,\n    consts: [[\"name\", \"tipoPersona\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectTiposPersonaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectTiposPersonaComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.tipoPersona.id = $event;\n        })(\"change\", function SelectTiposPersonaComponent_Template_select_change_0_listener() {\n          return ctx.onTipoSeleccionado();\n        });\n        i0.ɵɵtemplate(1, SelectTiposPersonaComponent_option_1_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.tipoPersona.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tiposPersona);\n      }\n    },\n    directives: [i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return SelectTiposPersonaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}